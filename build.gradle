plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

apply from: "$rootDir/constants.gradle"

group = 'com.n1b3lung0'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	// DEVELOPER TOOLS
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'

	// WEB
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

	// SECURITY

	// CLOUD
	implementation 'org.springframework.cloud:spring-cloud-starter-bootstrap'
	implementation 'org.springframework.cloud:spring-cloud-starter-config'

	// SQL
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	runtimeOnly 'org.postgresql:postgresql'

	// OPS
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	// UTILS
	implementation "org.apache.commons:commons-lang3:${apacheCommonsLang3Version}"
	implementation "commons-validator:commons-validator:${apacheCommonsValidatorVersion}"
	implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${springdocWebmvcUIVersion}"

	// TEST
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-testcontainers'
	testImplementation "org.testcontainers:junit-jupiter:${testContainersVersion}"
	testImplementation "org.testcontainers:postgresql:${testContainersVersion}"
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation "net.datafaker:datafaker:${datafakerVersion}"
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed" //, "standardOut", "standardError"

		showExceptions true
		exceptionFormat "full"
		showCauses true
		showStackTraces true

		// Change to `true` for more verbose test output
		showStandardStreams = false
	}
}
